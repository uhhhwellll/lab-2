1 - Подключение
      Внешние стили - Стили помещаются в отдельный файл с расширением .css, а затем подключаются к HTML-документу с помощью тега <link> внутри тега <head>. 
      Встроенные стили - Стили добавляются непосредственно в секцию <head> HTML-документа с использованием тега <style>.
    Использование
      Принцип наследования - Свойства CSS, объявленные для элементов-предков, почти всегда наследуются элементами-потомками. 
      !important - оно игнорирует всю иерархию и применяется вне зависимости от других источников стилей.
      Принцип каскадирования - Если какому-то элементу HTML одновременно поставлено в соответствие более одного правила CSS (происходит конфликт значений правил), браузер решает, какие из них применить, исходя из их приоритета.
2 - Аттрибуты:
none — никакого преобразования не применяется. Это значение по умолчанию. 
rotate(angle) — вращает элемент на заданный угол. 
scale(x,y) — масштабирует элемент по осям X и Y. 
translate(x,y) — перемещает элемент на заданные координаты. 
skew(x-angle,y-angle) — наклоняет элемент на заданные углы по осям X и Y. 
matrix() — преобразует двумерный элемент с помощью матрицы из шести значений. 
matrix3d() — преобразует HTML-элемент в трёхмерном виде с помощью матрицы 4x4 из шестнадцати значений. 
translate3d() — преобразует элемент путём его трёхмерного перевода (перемещения). 
translateX() — преобразует элемент, перемещая его вдоль оси X. 
translateY() — преобразует элемент, перемещая его вдоль оси Y. 
translateZ() — преобразует элемент путём его трёхмерного перемещения вдоль оси Z
3 - Eдиницы измерения
Абсолютные - Имеют фиксированный размер и не зависят от устройства или браузера пользователя.
Относительные - Значения задаются относительно другой величины.
Пример использования: установка размера шрифта относительно базового размера шрифта браузера — размер шрифта: 1,5rem. 
4 - Свойства
transition-property - Указывает, какое свойство будет анимироваться.
transition-duration - Задаёт время, в течение которого происходит переход. 
transition-timing-function - Определяет кривую скорости анимации.
transition-delay - Указывает задержку перед началом перехода.
5 - Наследование
Некоторые свойства элемента автоматически применяются ко всем его потомкам — дочерним, внучатым и более глубоким элементам. 
Это происходит по умолчанию, без явного объявления стилей для каждого потомка.
    Каскадирование
Каскадирование определяет порядок, в котором браузер применяет стили к элементам на веб-странице.
Этот механизм решает конфликты, возникающие при наличии нескольких правил, применимых к одному и тому же элементу.
6 - Структура
Блочная модель включает: 
Содержимое (content) — основное содержимое элемента, его текст или другие вложенные элементы.
Внутренние отступы (padding) — пространство между содержимым и границей элемента.
Граница (border) — рамка вокруг элемента, которая может иметь разную толщину и стиль.
Внешние отступы (margin) — пространство между границей элемента и соседними элементами.
7 - Блочные элементы - представляют собой большие строительные блоки веб-страницы.
При отображении браузер автоматически добавляет разрыв строки до и после блочного элемента, при этом он занимает всю доступную ширину.
Строчные элементы -  используются для разметки частей содержимого элементов. Ширина строчного элемента равна объёму содержимого.
    Переход от строчного к блочному элементу
В HTML
Обернуть строчный элемент в тег <div>
В CSS
Задать для элемента значение display: block
8 - Медиа-запрос (media queries) в CSS — это набор правил, которые позволяют адаптировать стили веб-страницы к характеристикам устройства пользователя.
Они помогают задавать условия, при которых одни стили будут применяться, а другие — игнорироваться.
Основная цель медиа-запросов — создание адаптивного дизайна — когда страница автоматически подстраивается под условия просмотра пользователя.
Медиа-запрос проверяет, выполняется ли условие, которое прописал разработчик.
Если условие выполняется, медиазапрос делает то, что написано внутри него: меняет шрифты, отступы и фон. Если не выполняется — не происходит ничего. 
9 - Синтаксис
Общий вид медиа-запроса: @media <условие> { <стиль> }.
Условия могут включать:
Тип устройства (например, screen для экранов). Если тип не указан, по умолчанию используется «all». 
Логические операторы (and, not, only). Например, and связывает разные условия («и»), not — позволяет сработать медиа-запросу в противоположном случае («отрицание»). 
Медиа-функции (width, height, orientation и др.).
Если условие связано с характеристиками устройства (например, min-width, max-width или orientation), его необходимо заключать в круглые скобки.
Однако при указании только типа устройства (например, screen или print) круглые скобки не требуются.
10 - Для медиа-запросов в CSS используются следующие типы носителей: 
all — все устройства (применяется по умолчанию);
aural — синтезаторы речи и звука;
braille — устройства, использующиеся слепыми людьми (основаны на системе Брайля);
embossed — принтеры, использующие для печати систему Брайля;
handheld — смартфоны, планшеты и другие устройства с малой шириной экрана;
print — принтер (так будет выглядеть страница на бумаге);
screen — экран монитора;
speech — речевые браузеры;
projection — проектор;
tty — терминалы и другие портативные устройства с ограниченными возможностями экрана;
tv — телевизор.
11 - В медиа-запросах CSS комбинировать условия можно с помощью логических операторов and («И»), or («ИЛИ») и not («Логическое НЕ»)
and - Оператор and связывает друг с другом разные условия. Запрос выполняется только в том случае, если истинно каждое из условий.
or - Оператор or используется как логическое «ИЛИ». Результат медиазапроса истинен, если истинно хотя бы одно из условий.
not - Оператор not используется для отрицания условий медиазапроса. Соответствующие стили применяются, если устройство не соответствует указанным вслед за not параметрам.